// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User accounts
model User {
  id            String    @id @default(cuid())
  username      String    @unique
  email         String    @unique
  password      String
  role          Role      @default(USER)
  emailVerified Boolean   @default(false)
  isBanned      Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  resources     Resource[]
  verificationTokens VerificationToken[]

  @@index([email])
  @@index([username])
}

enum Role {
  USER
  ADMIN
}

// Email verification tokens
model VerificationToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
}

// Main resource table
model Resource {
  id            String    @id @default(cuid())
  userId        String
  title         String
  description   String    @db.Text
  pluginType    String
  category      String?
  content       String    @db.Text
  currentVersion String
  isVisible     Boolean   @default(true)
  isApproved    Boolean   @default(false)
  downloadCount Int       @default(0)
  deletedAt     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  user     User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  versions ResourceVersion[]

  @@index([userId])
  @@index([pluginType])
  @@index([category])
  @@index([isVisible])
  @@index([isApproved])
  @@index([deletedAt])
}

// Resource version history (keep last 10)
model ResourceVersion {
  id         String   @id @default(cuid())
  resourceId String
  version    String
  changelog  String?  @db.Text
  zipUrl     String
  imageUrls  String?  @db.Text // JSON array as text
  fileSize   String
  createdAt  DateTime @default(now())

  resource Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)

  @@index([resourceId])
  @@index([createdAt])
}
